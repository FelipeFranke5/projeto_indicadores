# Generated by Django 5.0 on 2024-01-12 23:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="IndicadorDentroMeta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome_indicador", models.CharField(max_length=100)),
                ("diferenca", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="IndicadorForaMeta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome_indicador", models.CharField(max_length=100)),
                ("diferenca", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="MetaIndicador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_referencia", models.DateField(auto_now_add=True)),
                ("tmo", models.IntegerField()),
                ("aderencia", models.FloatField()),
                ("nps2", models.FloatField()),
                ("nps3", models.FloatField()),
                ("rechamada", models.FloatField()),
                ("shortcall", models.FloatField()),
                ("abs", models.FloatField()),
                ("transf_demais_ilhas", models.FloatField()),
                ("transf_pesquisa", models.FloatField()),
            ],
            options={
                "verbose_name": "metaindicador",
                "verbose_name_plural": "metaindicadores",
            },
        ),
        migrations.CreateModel(
            name="Indicador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_registro", models.DateField(auto_now_add=True)),
                ("tmo", models.IntegerField()),
                ("aderencia", models.FloatField()),
                ("nps2", models.FloatField()),
                ("nps3", models.FloatField()),
                ("rechamada", models.FloatField()),
                ("shortcall", models.FloatField()),
                ("abs", models.FloatField()),
                ("transf_demais_ilhas", models.FloatField()),
                ("transf_pesquisa", models.FloatField()),
                (
                    "dentro_meta",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "meta_desatualizada",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "operador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "indicadores_dentro_meta",
                    models.ManyToManyField(
                        blank=True,
                        related_name="indicadores_dentro",
                        to="backend.indicadordentrometa",
                    ),
                ),
                (
                    "indicadores_fora_meta",
                    models.ManyToManyField(
                        blank=True,
                        related_name="indicadores_fora",
                        to="backend.indicadorforameta",
                    ),
                ),
            ],
            options={
                "verbose_name": "indicador",
                "verbose_name_plural": "indicadores",
            },
        ),
    ]
